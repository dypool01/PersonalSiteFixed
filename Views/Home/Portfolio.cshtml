
@{
    ViewData["Title"] = "Portfolio";

    List<ProjectModel> projects = new List<ProjectModel>();

    projects.Add(new ProjectModel
            {
                Name = "Dungeon Project",
                WrittenLanguage = "C#",
                Description = "A functioning dungeon crawler application created using C# in Microsoft Visual Studio. Meant to be a parody of the grandfather of MMOs EverQuest.",
                Image = "/assets/img/UnsplashPics/Dungeon.jpg",
                PathToPage = Url.Action("DungeonDetails", "Home")
            });

    projects.Add(new ProjectModel
            {
                Name = "StoreFront",
                WrittenLanguage = "MVC",
                Description = "A storefront application initially made statically using HTML and later converted to MVC. Includes a functioning contact form, as well as product filters. Sells fantasy-themed weapons and armor mostly from the Final Fantasy series.",
                Image = "/assets/img/UnsplashPics/mike-petrucci-c9FQyqIECds-unsplash.jpg",
                PathToPage = Url.Action("StoreFrontDetails", "Home")
            });

    projects.Add(new ProjectModel
            {
                Name = "ToDo App",
                WrittenLanguage = "ReactJS",
                Description = "An application made to display the information from my ToDo API. Allows editing and deleting the different ToDos. Made using JavaScript and HTML.",
                Image = "/assets/img/UnsplashPics/React2.jpg",
                PathToPage = Url.Action("ReactJS", "Home")
            });

    projects.Add(new ProjectModel
            {
                Name = "SAT App",
                WrittenLanguage = "MVC, Agile/Scrum",
                Description = "An application made in a group of two using Agile Scrum methodology, a relational database, as well as MVC (Model, View, Controller) architectural pattern.",
                Image = "/assets/img/UnsplashPics/Hogwarts.jpg",
                PathToPage = Url.Action("Hogwarts", "Home")
            });

    projects.Add(new ProjectModel
            {
                Name = "Capstone Project",
                WrittenLanguage = "MVC, Agile/Scrum, AJAX",
                Description = "An application made in a group of two using Agile Scrum methodology, a relational database, as well as MVC (Model, View, Controller) architectural pattern. Groups were assigned different parts of the project via Trello boards. Worked on locking down controllers, scaffolding views, and implementing AJAX functionality as well as styling on the Events View.",
                Image = "/assets/img/Capstone.PNG",
                PathToPage = Url.Action("Capstone", "Home")
            });

    string concatStr = "";

    for (int i = 0; i < projects.Count; i++)
    {
        var project = projects[i];
        string currentIteration = i.ToString();

        concatStr += $@"
        <div class='accordion-item'>
            <h2 class='accordion-header' id='flush-heading{currentIteration}'>
                <button class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#flush-collapse{currentIteration}' aria-expanded='false' aria-controls='flush-collapse{currentIteration}'>
                    <strong>{project.Name} &nbsp;</strong>-<code>&nbsp; {project.WrittenLanguage}</code>
                </button>
            </h2>
            <div id='flush-collapse{currentIteration}' class='accordion-collapse collapse' aria-labelledby='flush-heading{currentIteration}' data-bs-parent='#accordionFlushExample'>
                <div class='accordion-body'>
                    <div class='card'>
                        <div class='row g-0'>
                            <div class='col-md-4'>
                                <img src='{project.Image}' class='img-fluid rounded-start border border-primary card-img-top'>
                            </div>
                            <div class='col-md-8'>
                                <div class='card-body'>
                                    <p class='card-text'><strong>Project Description: </strong>{project.Description}</p>
                                    <p class='card-text'><strong>View this Project: </strong><a href='{project.PathToPage}' title='{project.Name}'>Go to Project</a></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>";
    }
}

<main id="main">
    <section id="portfolio" class="portfolio" style="margin: 0 auto">
        <div class='accordion accordion-flush col-md-6' id='accordionFlushExample' style='margin: 0 auto'>
            @Html.Raw(concatStr)
        </div>
    </section>
</main>

}